// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    // 16のレジスタを8つ並べたもの
    Register(in=in, load=in0, out=w0);    
    Register(in=in, load=in1, out=w1);
    Register(in=in, load=in2, out=w2);
    Register(in=in, load=in3, out=w3);
    Register(in=in, load=in4, out=w4);
    Register(in=in, load=in5, out=w5);
    Register(in=in, load=in6, out=w6);
    Register(in=in, load=in7, out=w7);

    // 直接アクセスロジック 
    // load=1だった場合、指定されたregsiterに値w書き込む
    DMux8Way(in=load, sel=address, a=in0,b=in1,c=in2,d=in3,e=in4,f=in5,g=in6,h=in7);
    // addressに指定されたregisterの値を返す
    Mux8Way16(a=w0,b=w1,c=w2,d=w3,e=w4,f=w5,g=w6,h=w7,sel=address,out=out);
}
